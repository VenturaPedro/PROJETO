<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="css/style.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.1/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <title>DESPESAS</title>      
</head>
<body id="painel">
    <nav>
        <div class="menu">
            <div class="menu-item">
                <img src="/imagem/logoCash.png" alt="logo">
            </div>
            <div class="menu-item">
                <a href="/listar-clientes"><button class="btn"><i class="fas fa-home"></i><br>Dashboard</button></a>            
            </div>
            <div class="menu-item">
                <a href="/listar-pedidos"><button id="pedido" class="btn"><i class="fa-solid fa-cash-register"></i><br>Pedidos</button></a>
            </div>
            <div class="menu-item">
                <button class="btn"><i class="fa-solid fa-truck"></i><br>Entrega</button>
            </div>
            <div class="menu-item">
                <a href="painel.html"><button class="btn"><i class="fa-solid fa-gears"></i><br>Painel</button></a>
            </div>
        </div> 
    </nav> 
    <section id="painel-principal">
        <div>
            <a href="/listar-clientes"><button class="btn-listas">Clientes</button></a> 
            <a href="/listar-atendentes"><button class="btn-listas">Atendentes</button></a> 
            <a href="/listar-motoboy"><button class="btn-listas">Motoboy</button></a> 
            <a href="/listar-produtos"><button class="btn-listas">Produtos</button></a> 
            <a href="/listar-taxas"><button class="btn-listas">Taxas</button></a> 
            <a href="/listar-categorias"><button class="btn-listas">Categorias</button></a> 
            <a href="/listar-pagamentos"><button class="btn-listas">Pagamentos</button></a>
            <a href="/listar-despesas"><button class="btn-listas">Despesas</button></a> 
            <a href="/listar-estoques"><button class="btn-listas">Estoque</button></a> 
            <br><br>
        </div>
        <div id="tabela-despesas">
            <div id="pt2">
                <h1>Lista de Despesas</h1>
                <form class="filtro" id="filtroDespesas" action="/filtrar-despesas" method="post">
                    <input type="text" name="filtroDespesas" placeholder="Buscar por Despesas">
                    <button type="submit">Buscar</button>
                </form>
            </div>
            <table>
                <thead>
                <tr>
                    <!-- <th>ID</th> -->
                    <th>Descrição</th>
                    <th>Lançamento</th>
                    <th>Valor</th>
                    <th>Vencimento</th>
                    <th>Tipo</th>
                    <th>Observação</th>
                    <th colspan="2">Opções</th>
                    
                </tr>
                </thead>    
                <tbody>
                    <% despesa.forEach(function(despesa) { %>
                        <tr>                            
                            <!-- <td><%= despesa.ID %></td> -->
                            <td><%= despesa.Descricao %></td>
                            <td><%= new Intl.DateTimeFormat('pt-BR', {
                                dateStyle: 'short',
                            }).format(despesa.Lancamento) %></td>
                            <td><p>R$</p><%= despesa.Valor %></td>
                            <td><%= new Intl.DateTimeFormat('pt-BR', {
                                dateStyle: 'short',
                            }).format(despesa.Vencimento) %></td>
                            <td><%= despesa.Tipo %></td>
                            <td><%= despesa.Observacao %></td>
                            <td><button id="btn-editarDespesa" class="btn-edit" onclick="editarDespesa('<%= despesa.ID %>')"><i class="fa-solid fa-pen"></button></td>
                            <td><button id="btn-excluirDespesa" class="btn-edit" onclick="excluirDespesa('<%= despesa.ID %>')"><i class="fa-solid fa-trash"></button></td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
        <div id="editarDespesaPopup">
            <span id="fecharPopupEdicaoDespesa" onclick="fecharPopupEdicaoDespesa()"><i class="fa-solid fa-circle-xmark"></i></span>
            <h2>Editar Despesa</h2>
            <input type="hidden" id="edit-despesa-id"><br>
            <form action="/editar-despesa" method="post">
                <div>
                    <label for="descricaoDespesaEditada">Descrição:</label><br>
                    <input type="text" id="descricaoDespesaEditada" name="descricaoDespesaEditada" required size="30">
        
                    <label for="lancamentoDespesaEditada">Lançamento:</label><br>
                    <input type="date" id="lancamentoDespesaEditada" name="lancamentoDespesaEditada">
        
                    <label for="valorDespesaEditada">Valor:</label><br>
                    <input type="number" id="valorDespesaEditada" name="valorDespesaEditada" step="0.01" min="0">
        
                    <label for="vencimentoDespesaEditada">Vencimento:</label><br>
                    <input type="date" id="vencimentoDespesaEditada" name="vencimentoDespesaEditada">
        
                    <label for="tipoDespesaEditada">Tipo:</label><br>
                    <input type="text" id="tipoDespesaEditada" name="tipoDespesaEditada">
        
                    <label for="obsDespesaEditada">Observação:</label><br>
                    <input type="text" id="obsDespesaEditada" name="obsDespesaEditada" style="width: 80%; height: 50px;">
                </div>
                <div>
                    <br>
                    <button id="btn-salvarEdicaoDespesa">Salvar</button>
                    <button id="btn-cancelarEdicaoDespesa" onclick="fecharPopupEdicaoDespesa()">Cancelar</button>
                </div>
            </form>
        </div>
        
    </section>
    <script>
        if (sessionStorage.getItem("role")!= "admin") {
            location.href = "/painel"
        }


        async function excluirDespesa(despesaId) {
            console.log(`Excluir despesa com ID ${despesaId}`);
            const confirmacao = confirm(`Tem certeza que deseja excluir o despesa com ID ${despesaId}?`);
            if (confirmacao) {
                // Enviar uma solicitação ao servidor para excluir o despesa
                await fetch('/excluir-despesa', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({despesaId}),
                })
                .then(response => response.text())
                .then(data => {
                    alert(data); // Exibir mensagem de sucesso ou tratamento de erro
                    window.location.reload()// Recarregar a página ou atualizar a lista de atendentes
                })
                .catch(error => {
                    console.error('Erro ao excluir despesa:', error);
                });
            }
        }


        async function editarDespesa(despesaId) {
            console.log(`Editar despesa com ID ${despesaId}`);
            const confirmacao = confirm(`Tem certeza que deseja editar a despesa com ID ${despesaId}?`);
            if (confirmacao) {
                const response = await axios.get("/api/listar-despesas");
                const despesas = response.data.despesa;

                for (despesa of despesas) {
                    if (despesa.ID == despesaId) {
                        console.log("despesa", despesa);
                        document.getElementById('edit-despesa-id').value = despesa.ID;
                        document.getElementById('descricaoDespesaEditada').value = despesa.Descricao;
                        document.getElementById('lancamentoDespesaEditada').value = despesa.Lancamento;
                        document.getElementById('valorDespesaEditada').value = despesa.Valor;
                        document.getElementById('vencimentoDespesaEditada').value = despesa.Vencimento;
                        document.getElementById('tipoDespesaEditada').value = despesa.Tipo;
                        document.getElementById('obsDespesaEditada').value = despesa.Observacao;
                        break;
                    }
                }
                
                // Exibir o popup de edição imediatamente
                document.getElementById("editarDespesaPopup").style.display = "block";
            }
        }

        function fecharPopupEdicaoDespesa() {
            document.getElementById("editarDespesaPopup").style.display = "none";
            window.location.reload();
        }

        document.getElementById("btn-salvarEdicaoDespesa").addEventListener("click", async function() {
            const dadosEditados = {
                despesaId: document.getElementById("edit-despesa-id").value, 
                descricaoDespesaEditada: document.getElementById("descricaoDespesaEditada").value, 
                lancamentoDespesaEditada: document.getElementById("lancamentoDespesaEditada").value, 
                valorDespesaEditada: document.getElementById("valorDespesaEditada").value, 
                vencimentoDespesaEditada: document.getElementById("vencimentoDespesaEditada").value, 
                tipoDespesaEditada: document.getElementById("tipoDespesaEditada").value, 
                obsDespesaEditada: document.getElementById("obsDespesaEditada").value, 
            };

            await fetch('/editar-despesa', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(dadosEditados),
            })
            .then(() => {
                document.getElementById("editarDespesaPopup").style.display = "none";
                window.location.reload();
            })
            .catch(error => {
                console.error('Erro ao editar despesa:', error);
            });
        });

        document.getElementById("btn-cancelarEdicaoDespesa").addEventListener("click", function() {
            document.getElementById("editarDespesaPopup").style.display = "none";
            window.location.reload();
            return;
        });


    </script>
    
</body>
</html>
